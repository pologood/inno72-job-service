<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inno72.job.task.mapper.Inno72MerchantTotalCountMapper">
    <resultMap id="BaseResultMap" type="com.inno72.job.task.model.Inno72MerchantTotalCount">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="activity_name" jdbcType="VARCHAR" property="activityName"/>
        <result column="activity_id" jdbcType="VARCHAR" property="activityId"/>
        <result column="activity_type" jdbcType="VARCHAR" property="activityType"/>
        <result column="activity_status" jdbcType="VARCHAR" property="activityStatus"/>
        <result column="machine_num" jdbcType="INTEGER" property="machineNum"/>
        <result column="visitor_num" jdbcType="INTEGER" property="visitorNum"/>
        <result column="stay_user" jdbcType="INTEGER" property="stayUser"/>
        <result column="pv" jdbcType="INTEGER" property="pv"/>
        <result column="uv" jdbcType="INTEGER" property="uv"/>
        <result column="order" jdbcType="INTEGER" property="order"/>
        <result column="buyer" jdbcType="INTEGER" property="buyer"/>
        <result column="shipment" jdbcType="INTEGER" property="shipment"/>
        <result column="merchant_id" jdbcType="VARCHAR" property="merchantId"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" javaType="java.time.LocalDateTime"
                typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"/>
    </resultMap>

    <select id="selectNewCount" resultMap="BaseResultMap" parameterType="list">
        select id as activity_id, `name` as activity_name from inno72.inno72_interact
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="getActivityStatus" resultType="java.lang.Integer">
        select count(*) from inno72.inno72_activity_plan where activity_id = #{activityId} and #{subDate} between start_time and end_time
    </select>
    <select id="getMachineNum" resultType="java.lang.Integer" parameterType="map">
        select count(machine.id) from inno72.inno72_activity_plan plan
        left join inno72_activity_plan_machine l on plan.id = l.activity_plan_id
        left join inno72_machine machine on machine.id = l.machine_id
        where plan.activity_id = #{activityId}
    </select>
    <select id="getVisitorNumFromHourLog" resultType="java.lang.Integer" parameterType="map">
        select sum(num) from inno72.inno72_machine_info_log_hour where
        activity_id = #{activityId}
        and time > #{lastUpdateTime}
        and type = 1;
    </select>
    <select id="selectByIds" resultMap="BaseResultMap" parameterType="list">
        select * from inno72.inno72_merchant_total_count
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
      select * from (select * from inno72.inno72_merchant_total_count where merchant_id is not null and merchant_id != '' order by last_update_time desc limit 100000) a
      group by merchant_id, activity_id
    </select>

    <select id="selectActivityById" resultType="java.lang.Integer" parameterType="string">
        select count(0) from inno72.inno72_activity where id = #{activityId}
    </select>

    <select id="getActivityStatusFromInteract" resultType="java.lang.Integer" parameterType="map">
       select count(im.id) from inno72.inno72_merchant m
        left join inno72.inno72_merchant_user u on u.id = m.merchant_account_id
        left join inno72.inno72_interact_merchant im on im.merchant_id = m.id
        where u.merchant_id = #{merchantId} and im.interact_id = #{activityId};
    </select>

    <select id="getMachineNumByInteract" resultType="java.lang.Integer" parameterType="map">
        select count(0) from inno72.inno72_interact_machine where interact_id = #{activityId}
    </select>
    <select id="findMerchantBySellerId" resultType="java.lang.String">
        select merchant_id from inno72.inno72_merchant_user u
        left join inno72.inno72_merchant t on t.merchant_account_id = u.id
        where t.merchant_code = #{sellerId} limit 1
    </select>
    <select id="selectByMerIdAndActId" resultMap="BaseResultMap">
        select * from `inno72`.`inno72_merchant_total_count`
        where merchant_id = #{merchantId} and activity_id = #{activityId};
    </select>

    <select id="selectActIdByMerchantId" resultType="java.lang.String" parameterType="string">
        select activity_id from inno72.inno72_merchant_total_count where merchant_id = #{merchantId}
    </select>

    <insert id="insertS" parameterType="java.util.List">

        insert into `inno72`.`inno72_merchant_total_count`
        ( `id`, `activity_name`, `activity_id`, `activity_type`,
        `activity_status`, `machine_num`, `visitor_num`, `stay_user`,
        `pv`, `uv`, `order`, `shipment`,
        `merchant_id`, `last_update_time`, `buyer`)
        values
        <foreach collection="list" separator="," item="item">
            ( #{item.id}, #{item.activityName}, #{item.activityId}, #{item.activityType},
            #{item.activityStatus}, #{item.machineNum}, #{item.visitorNum}, #{item.stayUser},
            #{item.pv}, #{item.uv}, #{item.order}, #{item.shipment},
            #{item.merchantId}, now(), #{item.buyer})
        </foreach>
    </insert>
</mapper>